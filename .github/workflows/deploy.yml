name: Deploy

on: 
  # workflow_run:
  #   workflows: [Stage]
  #   types:
  #     - completed
  workflow_dispatch:

env:
  IMAGE_TAG: ${{ vars.LAST_IAMGE_TAG }}
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'Prod' || 'Dev' }}
    env:
      ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
      ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      EKS_CLUSTER: ${{ vars.EKS_CLUSTER }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Kube config file
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

      - name: Login to ECR
        id: logintoECR
        run: kubectl create secret docker-registry regcred --docker-server=${{ env.ECR_REGISTRY }} --docker-username=AWS  --docker-password=$(aws ecr get-login-password) 

      - name: Deploy Helm
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.8
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          cluster-name: ${{ env.EKS_CLUSTER }}
          chart-path: helm/sampleappcharts
          namespace: default
          values: appimage=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }},apptag=${{ github.run_number }}
          name: sampleapp-stack
      
      - name: Delete earlier Secret if present
        if: steps.logintoECR.outcome == 'success'
        run: kubectl delete secret regcred
