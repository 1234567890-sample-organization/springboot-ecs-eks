name: Build

on: 
  push:
    branches: 
      - 'dev'
    paths: 
      - '.github/workflows/**'
      - src/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'Prod' || 'Dev' }}
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Maven test
        run: mvn test
  
      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Sonar Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar 
              -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
              -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
              -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
              
      # - name: Analyze with SonarCloud
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   with:
      #     args: >
      #       -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
      #       -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
      #       -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
      #       -Dsonar.sources=src/
      #       -Dsonar.junit.reportsPath=target/surefire-reports/ 
      #       -Dsonar.jacoco.reportsPath=target/jacoco.exec 
      #       -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
      #       -Dsonar.java.binaries=target/test-classes/com/sachin/learning/sample1/
            
      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          with:
            scanMetadataReportFile: target/sonar/report-task.txt
  #   
